// <auto-generated />
using System;
using KillerPoolApi.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KillerPoolApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230227065216_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KillerPoolApi.Database.Models.Game", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid?>("NextPlayer")
                        .HasColumnType("uuid")
                        .HasColumnName("next_player");

                    b.Property<bool>("Started")
                        .HasColumnType("boolean")
                        .HasColumnName("started");

                    b.HasKey("Id")
                        .HasName("pk_games");

                    b.ToTable("games", (string)null);
                });

            modelBuilder.Entity("KillerPoolApi.Database.Models.Participation", b =>
                {
                    b.Property<string>("GameId")
                        .HasColumnType("text")
                        .HasColumnName("game_id");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid")
                        .HasColumnName("player_id");

                    b.Property<bool>("IsHost")
                        .HasColumnType("boolean")
                        .HasColumnName("is_host");

                    b.Property<short>("Lives")
                        .HasColumnType("smallint")
                        .HasColumnName("lives");

                    b.Property<short>("Order")
                        .HasColumnType("smallint")
                        .HasColumnName("order");

                    b.HasKey("GameId", "PlayerId")
                        .HasName("pk_participations");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_participations_player_id");

                    b.ToTable("participations", (string)null);
                });

            modelBuilder.Entity("KillerPoolApi.Database.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_players");

                    b.ToTable("players", (string)null);
                });

            modelBuilder.Entity("KillerPoolApi.Database.Models.Participation", b =>
                {
                    b.HasOne("KillerPoolApi.Database.Models.Game", "Game")
                        .WithMany("Participants")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_participations_games_game_id");

                    b.HasOne("KillerPoolApi.Database.Models.Player", "Player")
                        .WithMany("JoinedGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_participations_players_player_id");

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("KillerPoolApi.Database.Models.Game", b =>
                {
                    b.Navigation("Participants");
                });

            modelBuilder.Entity("KillerPoolApi.Database.Models.Player", b =>
                {
                    b.Navigation("JoinedGames");
                });
#pragma warning restore 612, 618
        }
    }
}
